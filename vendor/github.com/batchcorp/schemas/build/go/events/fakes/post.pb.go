// Code generated by protoc-gen-go. DO NOT EDIT.
// source: post.proto

package fakes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PostReactionType int32

const (
	PostReactionType_REACTION_TYPE_UNSET    PostReactionType = 0
	PostReactionType_REACTION_TYPE_HAPPY    PostReactionType = 1
	PostReactionType_REACTION_TYPE_SAD      PostReactionType = 2
	PostReactionType_REACTION_TYPE_ANGRY    PostReactionType = 3
	PostReactionType_REACTION_TYPE_CONFUSED PostReactionType = 4
	PostReactionType_REACTION_TYPE_LOVE     PostReactionType = 5
	PostReactionType_REACTION_TYPE_LIKE     PostReactionType = 6
	PostReactionType_REACTION_TYPE_DISLIKE  PostReactionType = 7
)

var PostReactionType_name = map[int32]string{
	0: "REACTION_TYPE_UNSET",
	1: "REACTION_TYPE_HAPPY",
	2: "REACTION_TYPE_SAD",
	3: "REACTION_TYPE_ANGRY",
	4: "REACTION_TYPE_CONFUSED",
	5: "REACTION_TYPE_LOVE",
	6: "REACTION_TYPE_LIKE",
	7: "REACTION_TYPE_DISLIKE",
}

var PostReactionType_value = map[string]int32{
	"REACTION_TYPE_UNSET":    0,
	"REACTION_TYPE_HAPPY":    1,
	"REACTION_TYPE_SAD":      2,
	"REACTION_TYPE_ANGRY":    3,
	"REACTION_TYPE_CONFUSED": 4,
	"REACTION_TYPE_LOVE":     5,
	"REACTION_TYPE_LIKE":     6,
	"REACTION_TYPE_DISLIKE":  7,
}

func (x PostReactionType) String() string {
	return proto.EnumName(PostReactionType_name, int32(x))
}

func (PostReactionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e114ad14deab1dd1, []int{0}
}

type Post struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Body                 string          `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	UserId               string          `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Tags                 []string        `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Comments             []*PostComment  `protobuf:"bytes,6,rep,name=comments,proto3" json:"comments,omitempty"`
	Reactions            []*PostReaction `protobuf:"bytes,7,rep,name=reactions,proto3" json:"reactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Post) Reset()         { *m = Post{} }
func (m *Post) String() string { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()    {}
func (*Post) Descriptor() ([]byte, []int) {
	return fileDescriptor_e114ad14deab1dd1, []int{0}
}

func (m *Post) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Post.Unmarshal(m, b)
}
func (m *Post) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Post.Marshal(b, m, deterministic)
}
func (m *Post) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Post.Merge(m, src)
}
func (m *Post) XXX_Size() int {
	return xxx_messageInfo_Post.Size(m)
}
func (m *Post) XXX_DiscardUnknown() {
	xxx_messageInfo_Post.DiscardUnknown(m)
}

var xxx_messageInfo_Post proto.InternalMessageInfo

func (m *Post) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Post) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Post) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Post) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Post) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Post) GetComments() []*PostComment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *Post) GetReactions() []*PostReaction {
	if m != nil {
		return m.Reactions
	}
	return nil
}

type PostComment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	UserId               string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostComment) Reset()         { *m = PostComment{} }
func (m *PostComment) String() string { return proto.CompactTextString(m) }
func (*PostComment) ProtoMessage()    {}
func (*PostComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e114ad14deab1dd1, []int{1}
}

func (m *PostComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostComment.Unmarshal(m, b)
}
func (m *PostComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostComment.Marshal(b, m, deterministic)
}
func (m *PostComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostComment.Merge(m, src)
}
func (m *PostComment) XXX_Size() int {
	return xxx_messageInfo_PostComment.Size(m)
}
func (m *PostComment) XXX_DiscardUnknown() {
	xxx_messageInfo_PostComment.DiscardUnknown(m)
}

var xxx_messageInfo_PostComment proto.InternalMessageInfo

func (m *PostComment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PostComment) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *PostComment) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type PostReaction struct {
	Type                 PostReactionType `protobuf:"varint,1,opt,name=type,proto3,enum=fakes.PostReactionType" json:"type,omitempty"`
	DateAdded            string           `protobuf:"bytes,2,opt,name=date_added,json=dateAdded,proto3" json:"date_added,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PostReaction) Reset()         { *m = PostReaction{} }
func (m *PostReaction) String() string { return proto.CompactTextString(m) }
func (*PostReaction) ProtoMessage()    {}
func (*PostReaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_e114ad14deab1dd1, []int{2}
}

func (m *PostReaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostReaction.Unmarshal(m, b)
}
func (m *PostReaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostReaction.Marshal(b, m, deterministic)
}
func (m *PostReaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostReaction.Merge(m, src)
}
func (m *PostReaction) XXX_Size() int {
	return xxx_messageInfo_PostReaction.Size(m)
}
func (m *PostReaction) XXX_DiscardUnknown() {
	xxx_messageInfo_PostReaction.DiscardUnknown(m)
}

var xxx_messageInfo_PostReaction proto.InternalMessageInfo

func (m *PostReaction) GetType() PostReactionType {
	if m != nil {
		return m.Type
	}
	return PostReactionType_REACTION_TYPE_UNSET
}

func (m *PostReaction) GetDateAdded() string {
	if m != nil {
		return m.DateAdded
	}
	return ""
}

func init() {
	proto.RegisterEnum("fakes.PostReactionType", PostReactionType_name, PostReactionType_value)
	proto.RegisterType((*Post)(nil), "fakes.Post")
	proto.RegisterType((*PostComment)(nil), "fakes.PostComment")
	proto.RegisterType((*PostReaction)(nil), "fakes.PostReaction")
}

func init() { proto.RegisterFile("post.proto", fileDescriptor_e114ad14deab1dd1) }

var fileDescriptor_e114ad14deab1dd1 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xc9, 0x9f, 0xb6, 0xf4, 0x0c, 0x4d, 0xe6, 0x8c, 0xad, 0x01, 0x09, 0xa9, 0xea, 0xd5,
	0x04, 0x52, 0x22, 0x0a, 0x2f, 0x10, 0xda, 0x00, 0x05, 0xd4, 0x46, 0x49, 0x86, 0xd4, 0xdd, 0x44,
	0x49, 0x6c, 0xda, 0x88, 0x65, 0x8e, 0x62, 0x17, 0xa9, 0x6f, 0xc9, 0x3d, 0x2f, 0x83, 0xec, 0x0d,
	0x48, 0xd6, 0xde, 0xd9, 0xdf, 0xef, 0x3b, 0x7f, 0xbe, 0xc4, 0x00, 0x35, 0x17, 0xd2, 0xad, 0x1b,
	0x2e, 0x39, 0xf6, 0xbe, 0x67, 0x3f, 0x98, 0x98, 0xfc, 0x32, 0xc0, 0x0e, 0xb9, 0x90, 0x78, 0x0a,
	0x66, 0x49, 0x1d, 0x63, 0x6c, 0x5c, 0x0e, 0x23, 0xb3, 0xa4, 0xf8, 0x0c, 0x7a, 0xb2, 0x94, 0x37,
	0xcc, 0x31, 0xb5, 0x74, 0x77, 0x41, 0x04, 0x3b, 0xe7, 0x74, 0xef, 0x58, 0x5a, 0xd4, 0x67, 0x1c,
	0xc1, 0x60, 0x27, 0x58, 0x93, 0x96, 0xd4, 0xb1, 0xb5, 0xdc, 0x57, 0xd7, 0x05, 0x55, 0x66, 0x99,
	0x6d, 0x84, 0xd3, 0x1b, 0x5b, 0xca, 0xac, 0xce, 0xe8, 0xc2, 0xe3, 0x82, 0x57, 0x15, 0xbb, 0x95,
	0xc2, 0xe9, 0x8f, 0xad, 0xcb, 0x93, 0x29, 0xba, 0x7a, 0x13, 0x57, 0x6d, 0x31, 0xbb, 0x43, 0xd1,
	0x3f, 0x0f, 0xbe, 0x81, 0x61, 0xc3, 0xb2, 0x42, 0x96, 0xfc, 0x56, 0x38, 0x03, 0x5d, 0x70, 0xd6,
	0x2a, 0x88, 0xee, 0x59, 0xf4, 0xdf, 0x35, 0xf9, 0x0c, 0x27, 0xad, 0x5e, 0x07, 0xc1, 0xfe, 0x46,
	0x30, 0x8f, 0x47, 0xb0, 0xda, 0x11, 0x26, 0xd7, 0xf0, 0xa4, 0x3d, 0x06, 0x5f, 0x83, 0x2d, 0xf7,
	0x35, 0xd3, 0xed, 0x4e, 0xa7, 0xa3, 0x23, 0x9b, 0x24, 0xfb, 0x9a, 0x45, 0xda, 0x84, 0x2f, 0x01,
	0x68, 0x26, 0x59, 0x9a, 0x51, 0xca, 0xe8, 0xfd, 0xbc, 0xa1, 0x52, 0x7c, 0x25, 0xbc, 0xfa, 0x6d,
	0x00, 0x79, 0x58, 0x89, 0x23, 0x38, 0x8b, 0x02, 0x7f, 0x96, 0x2c, 0x56, 0xcb, 0x34, 0x59, 0x87,
	0x41, 0x7a, 0xb5, 0x8c, 0x83, 0x84, 0x3c, 0x3a, 0x04, 0x9f, 0xfc, 0x30, 0x5c, 0x13, 0x03, 0xcf,
	0xe1, 0x69, 0x17, 0xc4, 0xfe, 0x9c, 0x98, 0x87, 0x7e, 0x7f, 0xf9, 0x31, 0x5a, 0x13, 0x0b, 0x5f,
	0xc0, 0x45, 0x17, 0xcc, 0x56, 0xcb, 0x0f, 0x57, 0x71, 0x30, 0x27, 0x36, 0x5e, 0x00, 0x76, 0xd9,
	0xd7, 0xd5, 0xb7, 0x80, 0xf4, 0x8e, 0xe8, 0x8b, 0x2f, 0x01, 0xe9, 0xe3, 0x73, 0x38, 0xef, 0xea,
	0xf3, 0x45, 0xac, 0xd1, 0xe0, 0xfd, 0xbb, 0xeb, 0xe9, 0xa6, 0x94, 0xdb, 0x5d, 0xee, 0x16, 0xbc,
	0xf2, 0xf2, 0x4c, 0x16, 0xdb, 0x82, 0x37, 0xb5, 0x27, 0x8a, 0x2d, 0xab, 0x32, 0xe1, 0xe5, 0xbb,
	0xf2, 0x86, 0x7a, 0x1b, 0xee, 0xb1, 0x9f, 0xea, 0x47, 0x7b, 0xfa, 0x4b, 0xe6, 0x7d, 0xfd, 0x38,
	0xdf, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0xff, 0xbb, 0xcf, 0x16, 0xaa, 0x02, 0x00, 0x00,
}
